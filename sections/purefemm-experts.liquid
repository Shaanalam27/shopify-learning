<style>

  .experts-wrapper{
max-width : 1400px;
 min-height : 80vh;
    margin : auto;
    padding : 50px;
    display : flex;
    flex-direction : row;
    
  }
 .experts-wrapper .experts-wrapper-left{

    min-height : 100%;
    width : 25%;
   padding : 50px 50px 0px 0px ;
   
  }
  .experts-wrapper  .experts-wrapper-right{
   
   min-height : 100%;
    width : 75%;
  }

    .expert-inner-wrapper {
  width: 100%;
  position: relative;
}
.expert-inner-wrapper i {
  top: 110%;
  height: 50px;
  width: 50px;
  cursor: pointer;
  font-size: 1.25rem;
  position: absolute;
  text-align: center;
  line-height: 50px;
  background: #9c3246;
  color : white;
  border-radius: 50%;
  box-shadow: 0 3px 6px rgba(0,0,0,0.23);
  transform: translateY(-50%);
  transition: transform 0.1s linear;
}
.expert-inner-wrapper i:active{
  transform: translateY(-50%) scale(0.85);
}
.expert-inner-wrapper i:first-child{
  left: 44%;
}
.expert-inner-wrapper i:last-child{
  right: 44%;
}
.expert-inner-wrapper .expertCarousel{
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: calc((100% / 3) - 12px);
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  gap: 16px;
  border-radius: 8px;
  scroll-behavior: smooth;
  scrollbar-width: none;
}
.expertCarousel::-webkit-scrollbar {
  display: none;
}
.expertCarousel.no-transition {
  scroll-behavior: auto;
}
.expertCarousel.dragging {
  scroll-snap-type: none;
  scroll-behavior: auto;
}
.expertCarousel.dragging .card {
  cursor: grab;
  user-select: none;
}
.expertCarousel :where(.card, .img) {
  display: flex;
  justify-content: center;
  align-items: center;
}
.expertCarousel .card {
  scroll-snap-align: start;
  height: 60vh;
  list-style: none;
  background: #fff;
  cursor: pointer;
  flex-direction: column;
}
.expertCarousel .card .img {
  width: 100%;
  height : 100%;
}
.card .img img {
  width : 100%;
  object-fit: cover;
}
.expertCarousel .card h2 {
  font-weight: 500;
  font-size: 1.56rem;
  margin: 30px 0 5px;
}
.expertCarousel .card span {
  color: #6A6D78;
  font-size: 1.31rem;
}

.experts-wrapper-left h1{
    font-family: "Satoshi", sans-serif !important;
    font-size: 28px;
    letter-spacing: -1.5px;
    line-height: 30px;
    color: #9c3246;
  font-weight : 700;
}
  .experts-wrapper-left h1 span{
    font-family: "dutch", sans-serif !important;
    font-style: italic;
    font-weight: 400;
  }
@media screen and (max-width: 900px) {
  .expert-inner-wrapper .expertCarousel {
    grid-auto-columns: calc((100% / 2) - 9px);
  }
  .experts-wrapper{
max-width : 1400px;
 min-height : 80vh;
    margin : auto;
    padding : 20px;
    display : flex;
    flex-direction : column;
  }
  .experts-wrapper  .experts-wrapper-right{
   
   min-height : 100%;
    width : 100%;
  }
  
}
@media screen and (max-width: 600px) {
  .expert-inner-wrapper .expertCarousel {
    grid-auto-columns: 100%;
  }
  .expert-inner-wrapper i:first-child{
  left: 34%;
}
.expert-inner-wrapper i:last-child{
  right: 34%;
}
}
</style>
<div class="experts-wrapper">
  <div class="experts-wrapper-left">
    <h1>“PureFemm delivers vitality, reliability, and transformative<span> wellness in every supplement.”</span></h1>
  </div>
    <div class="experts-wrapper-right">
     <div class="expert-inner-wrapper">
      <i id="left" class="fa-solid fa-angle-left"></i>
      <ul class="expertCarousel">
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
          
        </li>
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
        
        </li>
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
          
        </li>
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
        
        </li>
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
         
        </li>
        <li class="card">
          <div class="img"><img src="https://cdn.shopify.com/s/files/1/0631/5743/6566/files/Rectangle_91.png?v=1707732788" alt="img" draggable="false"></div>
         
        </li>
      </ul>
      <i id="right" class="fa-solid fa-angle-right"></i>
    </div>
    </div>
</div>
<script>
  const expertInnerWrapper = document.querySelector(".expert-inner-wrapper");
const expertCarousel = document.querySelector(".expertCarousel");
const firstExpertCardWidth = expertCarousel.querySelector(".card").offsetWidth;
const arrowBtns = document.querySelectorAll(".expert-inner-wrapper i");
const expertCarouselChildrens = [...expertCarousel.children];

let isExpertDragging = false, isExpertAutoPlay = true, startExpertX, startScrollExpertLeft, timeoutExpertId;

// Get the number of cards that can fit in the expertCarousel at once
let cardExpertPerView = Math.round(expertCarousel.offsetWidth / firstExpertCardWidth);

// Insert copies of the last few cards to beginning of expertCarousel for infinite scrolling
expertCarouselChildrens.slice(-cardExpertPerView).reverse().forEach(card => {
    expertCarousel.insertAdjacentHTML("afterbegin", card.outerHTML);
});

// Insert copies of the first few cards to end of expertCarousel for infinite scrolling
expertCarouselChildrens.slice(0, cardExpertPerView).forEach(card => {
    expertCarousel.insertAdjacentHTML("beforeend", card.outerHTML);
});

// Scroll the expertCarousel at appropriate postition to hide first few duplicate cards on Firefox
expertCarousel.classList.add("no-transition");
expertCarousel.scrollLeft = expertCarousel.offsetWidth;
expertCarousel.classList.remove("no-transition");

// Add event listeners for the arrow buttons to scroll the expertCarousel left and right
arrowBtns.forEach(btn => {
    btn.addEventListener("click", () => {
        expertCarousel.scrollLeft += btn.id == "left" ? -firstExpertCardWidth : firstExpertCardWidth;
    });
});

const dragExpertStart = (e) => {
    isExpertDragging = true;
    expertCarousel.classList.add("dragging");
    // Records the initial cursor and scroll position of the expertCarousel
    startExpertX = e.pageX;
    startScrollExpertLeft = expertCarousel.scrollLeft;
}

const draggingExpert = (e) => {
    if(!isExpertDragging) return; // if isExpertDragging is false return from here
    // Updates the scroll position of the expertCarousel based on the cursor movement
    expertCarousel.scrollLeft = startScrollExpertLeft - (e.pageX - startExpertX);
}

const dragExpertStop = () => {
    isExpertDragging = false;
    expertCarousel.classList.remove("dragging");
}

const infiniteExpertScroll = () => {
    // If the expertCarousel is at the beginning, scroll to the end
    if(expertCarousel.scrollLeft === 0) {
        expertCarousel.classList.add("no-transition");
        expertCarousel.scrollLeft = expertCarousel.scrollWidth - (2 * expertCarousel.offsetWidth);
        expertCarousel.classList.remove("no-transition");
    }
    // If the expertCarousel is at the end, scroll to the beginning
    else if(Math.ceil(expertCarousel.scrollLeft) === expertCarousel.scrollWidth - expertCarousel.offsetWidth) {
        expertCarousel.classList.add("no-transition");
        expertCarousel.scrollLeft = expertCarousel.offsetWidth;
        expertCarousel.classList.remove("no-transition");
    }

    // Clear existing timeout & start autoplay if mouse is not hovering over expertCarousel
    clearTimeout(timeoutExpertId);
    if(!expertInnerWrapper.matches(":hover")) autoExpertPlay();
}

const autoExpertPlay = () => {
    if(window.innerWidth < 800 || !isExpertAutoPlay) return; // Return if window is smaller than 800 or isExpertAutoPlay is false
    // Autoplay the expertCarousel after every 2500 ms
    timeoutExpertId = setTimeout(() => expertCarousel.scrollLeft += firstExpertCardWidth, 2500);
}
autoExpertPlay();

expertCarousel.addEventListener("mousedown", dragExpertStart);
expertCarousel.addEventListener("mousemove", draggingExpert);
document.addEventListener("mouseup", dragExpertStop);
expertCarousel.addEventListener("scroll", infiniteExpertScroll);
expertInnerWrapper.addEventListener("mouseenter", () => clearTimeout(timeoutExpertId));
expertInnerWrapper.addEventListener("mouseleave", autoExpertPlay);
</script>
{% schema %}
  {
    "name": "purefem experts",
    "settings": [],
     "presets" : [{"name" : "purefem experts"}]
  }
{% endschema %}